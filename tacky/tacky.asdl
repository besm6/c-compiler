module TAC {
    Program = (TopLevel* decls)

    TopLevel = Function(identifier name, bool global, identifier* params, Instruction* body)
             | StaticVariable(identifier name, bool global, Type typ, StaticInit* init_list)
             | StaticConstant(identifier name, Type typ, StaticInit init)

    Instruction = Return(Val? src)
                | SignExtend(Val src, Val dst)
                | Truncate(Val src, Val dst)
                | ZeroExtend(Val src, Val dst)
                | DoubleToInt(Val src, Val dst)
                | DoubleToUInt(Val src, Val dst)
                | IntToDouble(Val src, Val dst)
                | UIntToDouble(Val src, Val dst)
                | Unary(UnaryOperator op, Val src, Val dst)
                | Binary(BinaryOperator op, Val src1, Val src2, Val dst)
                | Copy(Val src, Val dst)
                | GetAddress(Val src, Val dst)
                | Load(Val src_ptr, Val dst)
                | Store(Val src, Val dst_ptr)
                | AddPtr(Val ptr, Val index, int scale, Val dst)
                | CopyToOffset(Val src, identifier dst, int offset)
                | CopyFromOffset(identifier src, int offset, Val dst)
                | Jump(identifier target)
                | JumpIfZero(Val condition, identifier target)
                | JumpIfNotZero(Val condition, identifier target)
                | Label(identifier name)
                | FunCall(identifier fun_name, Val* args, Val? dst)

    Val = Constant(Const val)
        | Var(identifier name)

    UnaryOperator = Complement | Negate | Not

    BinaryOperator = Add | Subtract | Multiply | Divide | Remainder | Equal | NotEqual
                   | LessThan | LessOrEqual | GreaterThan | GreaterOrEqual
                   | BitwiseAnd | BitwiseOr | BitwiseXor | LeftShift | RightShift

    Type = Char | SChar | UChar | Int | Long | UInt | ULong | Double | Void
         | FunType(Type* params, Type ret)
         | Pointer(Type referenced)
         | Array(Type element, int size)
         | Structure(identifier tag)

    StaticInit = IntInit(int val) | LongInit(long val) | UIntInit(int val) | ULongInit(long val)
               | CharInit(int val) | UCharInit(int val)
               | DoubleInit(double val) | ZeroInit(int bytes)
               | StringInit(string val, bool null_terminated)
               | PointerInit(string name)

    Const = ConstInt(int val) | ConstLong(long val) | ConstUInt(int val) | ConstULong(long val)
          | ConstDouble(double val) | ConstChar(int val) | ConstUChar(int val)
}
