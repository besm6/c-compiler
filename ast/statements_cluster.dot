digraph Statements_Cluster {
    rankdir=TB;
    node [shape=plaintext, style=filled, fillcolor=lightblue];
    edge [color=navy];

    label="Statement Structures";
    style=filled;
    fillcolor=lightpink;

    Stmt [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0"><TR><TD>Stmt</TD></TR></TABLE>>];
    DeclOrStmt [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0"><TR><TD>DeclOrStmt</TD></TR></TABLE>>];
    ForInit [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0"><TR><TD>ForInit</TD></TR></TABLE>>];
    Expr [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0"><TR><TD>Expr (External)</TD></TR></TABLE>>, style="filled,dashed", fillcolor=lightgray];
    Declaration [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0"><TR><TD>Declaration (External)</TD></TR></TABLE>>, style="filled,dashed", fillcolor=lightgray];

    // Statement relationships
    Stmt -> Expr [label="u.expr"];
    Stmt -> DeclOrStmt [label="u.compound"];
    Stmt -> Expr [label="u.if_stmt.condition"];
    Stmt -> Stmt [label="u.if_stmt.then_stmt"];
    Stmt -> Stmt [label="u.if_stmt.else_stmt"];
    Stmt -> Expr [label="u.switch_stmt.expr"];
    Stmt -> Stmt [label="u.switch_stmt.body"];
    Stmt -> Expr [label="u.while_stmt.condition"];
    Stmt -> Stmt [label="u.while_stmt.body"];
    Stmt -> Stmt [label="u.do_while.body"];
    Stmt -> Expr [label="u.do_while.condition"];
    Stmt -> ForInit [label="u.for_stmt.init"];
    Stmt -> Expr [label="u.for_stmt.condition"];
    Stmt -> Expr [label="u.for_stmt.update"];
    Stmt -> Stmt [label="u.for_stmt.body"];
    Stmt -> Stmt [label="u.labeled.stmt"];
    Stmt -> Expr [label="u.case_stmt.expr"];
    Stmt -> Stmt [label="u.case_stmt.stmt"];
    Stmt -> Stmt [label="u.default_stmt"];
    DeclOrStmt -> DeclOrStmt [label="next"];
    DeclOrStmt -> Declaration [label="u.decl"];
    DeclOrStmt -> Stmt [label="u.stmt"];
    ForInit -> Expr [label="u.expr"];
    ForInit -> Declaration [label="u.decl"];
}