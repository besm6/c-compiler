digraph Expressions_Cluster {
    rankdir=TB;
    node [shape=plaintext, style=filled, fillcolor=lightblue];
    edge [color=navy];

    label="Expression Structures";
    style=filled;
    fillcolor=lightyellow;

    Expr [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0"><TR><TD>Expr</TD></TR></TABLE>>];
    Literal [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0"><TR><TD>Literal</TD></TR></TABLE>>];
    UnaryOp [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0"><TR><TD>UnaryOp</TD></TR></TABLE>>];
    BinaryOp [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0"><TR><TD>BinaryOp</TD></TR></TABLE>>];
    AssignOp [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0"><TR><TD>AssignOp</TD></TR></TABLE>>];
    GenericAssoc [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0"><TR><TD>GenericAssoc</TD></TR></TABLE>>];
    Type [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0"><TR><TD>Type (External)</TD></TR></TABLE>>, style="filled,dashed", fillcolor=lightgray];
    InitItem [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0"><TR><TD>InitItem (External)</TD></TR></TABLE>>, style="filled,dashed", fillcolor=lightgray];

    // Expression relationships
    Expr -> Expr [label="next"];
    Expr -> Literal [label="u.literal"];
    Expr -> UnaryOp [label="u.unary_op.op"];
    Expr -> Expr [label="u.unary_op.expr"];
    Expr -> BinaryOp [label="u.binary_op.op"];
    Expr -> Expr [label="u.binary_op.left"];
    Expr -> Expr [label="u.binary_op.right"];
    Expr -> Expr [label="u.assign.target"];
    Expr -> AssignOp [label="u.assign.op"];
    Expr -> Expr [label="u.assign.value"];
    Expr -> Expr [label="u.cond.condition"];
    Expr -> Expr [label="u.cond.then_expr"];
    Expr -> Expr [label="u.cond.else_expr"];
    Expr -> Type [label="u.cast.type"];
    Expr -> Expr [label="u.cast.expr"];
    Expr -> Expr [label="u.call.func"];
    Expr -> Expr [label="u.call.args"];
    Expr -> Type [label="u.compound_literal.type"];
    Expr -> InitItem [label="u.compound_literal.init"];
    Expr -> Expr [label="u.field_access.expr"];
    Expr -> Expr [label="u.ptr_access.expr"];
    Expr -> Expr [label="u.post_inc"];
    Expr -> Expr [label="u.post_dec"];
    Expr -> Expr [label="u.sizeof_expr"];
    Expr -> Type [label="u.sizeof_type"];
    Expr -> Type [label="u.align_of"];
    Expr -> Expr [label="u.generic.controlling_expr"];
    Expr -> GenericAssoc [label="u.generic.associations"];
    Expr -> Type [label="type"];
    GenericAssoc -> GenericAssoc [label="next"];
    GenericAssoc -> Type [label="u.type_assoc.type"];
    GenericAssoc -> Expr [label="u.type_assoc.expr"];
    GenericAssoc -> Expr [label="u.default_assoc"];
}